# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fota.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.uic import loadUi
import json
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import sys
from upload import upload_firmware

car_idList = ["1", "2", "3", "4", '5']

ecu_idList = ["1", "2", "3", "4", '5']


# class for scrollable label
class ScrollLabel(QScrollArea):

    # constructor
    def __init__(self, *args, **kwargs):
        QScrollArea.__init__(self, *args, **kwargs)

        # making widget resizable
        self.setWidgetResizable(True)

        # making qwidget object
        content = QWidget(self)
        self.setWidget(content)

        # vertical box layout
        lay = QVBoxLayout(content)

        # creating label
        self.label = QLabel(content)

        # setting alignment to the text
        self.label.setAlignment(Qt.AlignLeft | Qt.AlignTop)

        # making label multi-line
        self.label.setWordWrap(True)

        # adding label to the layout
        lay.addWidget(self.label)

    # the setText method
    def setText(self, text):
        # setting text to the label
        self.label.setText(text)


class MainWindow(QMainWindow):
    def __init__(self):
        super(QMainWindow, self).__init__()
        loadUi("fota.ui", self)
        self.comboBox.addItems(car_idList)
        self.comboBox_2.addItems(ecu_idList)

        self.pushButton_4.clicked.connect(self.browseFile_bin)
        self.pushButton_2.clicked.connect(self.browseFile_txt)
        self.pushButton.clicked.connect(self.upload)
        firmwareIcon = QtGui.QIcon("firmware.png")
        self.pushButton_4.setIcon(firmwareIcon)
        descriptionIcon = QtGui.QIcon("description.png")
        self.pushButton_2.setIcon(descriptionIcon)
        # making label multi-line
        # self.label_11.setWordWrap(True)
        # creating scroll label
        global label_11
        label_11 = ScrollLabel(self)
        self.show()
        # setting geometry
        label_11.setGeometry(50, 400, 631, 211)
        label_11.setStyleSheet("color: rgb(255, 255, 255); border-color: rgb(89, 89, "
                               "89); background-color: rgb(16, 16, 16); padding-left : 1 px; padding-top : 1 px; "
                               "padding-right : 1 px;")

    def browseFile_bin(self):
        currentPath = os.getcwd()
        global fpath
        fpath = QFileDialog.getOpenFileName(self, 'Open bin file', currentPath, 'bin file (*.bin)')[0]
        self.label_9.setText(fpath)

    def browseFile_txt(self):
        currentPath = os.getcwd()
        fpath = QFileDialog.getOpenFileName(self, 'Open text file', currentPath, 'text file (*.txt)')[0]
        self.label_10.setText(fpath)
        global descriptionFile
        descriptionFile = open(fpath, 'r').read()
        label_11.setText(descriptionFile)

    def upload(self):
        key = self.lineEdit_6.text().encode()
        firmware_version = self.lineEdit_3.text()
        car_id = self.comboBox.currentIndex() + 1
        ecu_id = self.comboBox_2.currentIndex() + 1
        status, response = upload_firmware(fpath, car_id, ecu_id, firmware_version, descriptionFile, key)
        msg = QMessageBox()
        msg.setWindowTitle("Upload State")
        msg.setStyleSheet("background-color: rgb(16, 16, 16);color: rgb(255, 255, 255);")
        if status == 200:
            jsonData = json.loads(response)
            msg.setText("The file has been uploaded successfully !\n" + "Firmware_id: " + str(jsonData['firmware_id']))
            msg.setIcon(QMessageBox.Information)
        else:
            msg.setText(f'Error Status Code : {status}')
            msg.setIcon(QMessageBox.Critical)
        msg.setStandardButtons(QMessageBox.Ok)
        x = msg.exec()


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    window = MainWindow()

    window.show()
    sys.exit(app.exec())
